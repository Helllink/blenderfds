import time, sys, logging, bpy
from ...config import MAXLEN
from ...types import FDSList
from ... import utils

log = logging.getLogger(__name__)


def append_free_text(sc, fds_list):
    if sc.bf_config_text:
        name = sc.bf_config_text.name
        text = sc.bf_config_text.as_string()
        msg = f"\n--- Free text from Blender Text <{name}>\n{text}"
        fds_list.append(FDSList(msg=msg))


def append_header(sc, fds_list):
    bfv = sys.modules["blenderfds"].bl_info["version"]
    blv = bpy.app.version_string
    now = time.strftime("%a, %d %b %Y, %H:%M:%S", time.localtime())
    bl_filepath = utils.io.shorten(
        bpy.data.filepath or "not saved", max_len=MAXLEN - 8, start_part=0
    )
    msgs = (
        f"! Generated by BlenderFDS {bfv[0]}.{bfv[1]}.{bfv[2]} on Blender {blv}",
        f"! Date: {now}",
        f"! File: {bl_filepath}",
    )
    fds_list.msgs.extend(msgs)


def append_sc_namelists(context, sc, fds_list):
    msg = f"--- Case from Blender Scene <{sc.name}> and View Layer <{context.view_layer.name}>"
    iterable = (  # Scene namelists
        bf_namelist.to_fds_list(context)
        for bf_namelist in sc.bf_namelists
        if bf_namelist
    )
    fds_list.append(FDSList(iterable=iterable, msg=msg))


def append_mas_namelists(context, sc, fds_list):
    header = "\n--- Boundary conditions from Blender Materials"
    mas = list(
        set(  # related to Scene + use_fake_user
            ms.material for ob in sc.objects for ms in ob.material_slots if ms.material
        ).union(ma for ma in bpy.data.materials if ma.use_fake_user)
    )
    mas.sort(key=lambda k: k.name)  # alphabetic sorting by name
    iterable = (ma.to_fds_list(context=context) for ma in mas)
    fds_list.append(FDSList(header=header, iterable=iterable))


def append_cos_namelists(context, sc, fds_list):
    fds_list.append(
        FDSList(
            header="\n--- Geometric namelists from Blender Collections",
            iterable=sc.collection.to_fds_list(context),
        )
    )
